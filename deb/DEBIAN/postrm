#!/bin/sh
# postrm script for kafka

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# def kafka
_name=kafka
_kafka_user=${_name}
_kafka_group=${_name}

case "$1" in
    remove)
        if [ -d /run/systemd/system ]; then
            systemctl --system daemon-reload >/dev/null || true
        fi

        if [ -x "/usr/bin/deb-systemd-helper" ]; then
            deb-systemd-helper mask 'kafka.service' >/dev/null || true
        fi
    ;;
    
    purge)
        if [ -x "/usr/bin/deb-systemd-helper" ]; then
            deb-systemd-helper purge 'kafka.service' >/dev/null || true
            deb-systemd-helper unmask 'kafka.service' >/dev/null || true
        fi

        # ignore errors during purge
        set +e

        # remove the log files
        rm -rf /var/log/kafka/

        # remove the lib directory if empty
        if [ -d "/var/lib/kafka/" ]; then
            rmdir --ignore-fail-on-non-empty /var/lib/kafka/
        fi

        # remove the configuration directories
        rmdir --ignore-fail-on-non-empty /etc/kafka/

        # remove user
        /usr/sbin/userdel ${_kafka_user}

        set -e
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
        # nothing to do here
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
